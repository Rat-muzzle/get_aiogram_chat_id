from aiogram.filters.command import Command
from aiogram.types import Message, BotCommandScopeDefault
from aiogram import Bot, Dispatcher, html
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv
import os, asyncio, logging


logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()
TOKEN = os.getenv("TOKEN")


dp = Dispatcher()

@dp.message()
async def send_chat_id(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /chat_id"""
    logging.info(f"–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø–µ {message.chat.id} –æ—Ç {message.from_user.id}")
    chat = message.chat

    response = (
        f"üÜî <b>Chat ID</b>: <code>{chat.id}</code>\n"
        f"üë• <b>–¢–∏–ø —á–∞—Ç–∞</b>: {chat.type}\n"
    )

    # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —á–∞—Ç–∞
    if chat.title:
        response += f"üìõ <b>–ù–∞–∑–≤–∞–Ω–∏–µ</b>: {chat.title}\n"
    if chat.username:
        response += f"üë§ <b>–Æ–∑–µ—Ä–Ω–µ–π–º</b>: @{chat.username}\n"

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—è—Å–Ω–µ–Ω–∏–µ
    response += "\n‚ÑπÔ∏è <i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç ID –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API Telegram</i>"

    await message.reply(response)


async def main():
    bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))

    # sql_total.sql_registr(124124, 'login', 'password', 'note')

    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)
    await bot.set_my_commands(scope=BotCommandScopeDefault())


if __name__ == '__main__':

    asyncio.run(main())